/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Component;

import Model.ClientHandler;
import Thread.ServerThread;
import Model.ConnectSocket;
import Model.FolderInfo;
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author ASUS
 */
public class DashboardForm extends javax.swing.JPanel {

    ConnectSocket connectSocket;
    public static Vector<String> listClient;
    private File[] roots;

    private ClientHandler currentClientHandler;

    /**
     * Creates new form NewJPanel
     */
    public DashboardForm() {
        initComponents();
        init();
    }

    public void init() {
        listClient = new Vector<>();
        updateListClients();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        diaLogDirectory = new javax.swing.JDialog();
        DirectoryTree = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel5 = new javax.swing.JLabel();
        pathChooseDirectory = new javax.swing.JTextField();
        selectDirectoryBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textIP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        BtnDirectory = new javax.swing.JButton();
        pathText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLog = new javax.swing.JTable();

        diaLogDirectory.setTitle("Chọn Directory");
        diaLogDirectory.setMinimumSize(new java.awt.Dimension(800, 500));
        diaLogDirectory.setModal(true);

        jTree1.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
            }
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                jTree1TreeExpanded(evt);
            }
        });
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        javax.swing.GroupLayout DirectoryTreeLayout = new javax.swing.GroupLayout(DirectoryTree);
        DirectoryTree.setLayout(DirectoryTreeLayout);
        DirectoryTreeLayout.setHorizontalGroup(
            DirectoryTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirectoryTreeLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );
        DirectoryTreeLayout.setVerticalGroup(
            DirectoryTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirectoryTreeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setText("Path:");

        pathChooseDirectory.setText("path");

        selectDirectoryBtn.setText("Chọn");
        selectDirectoryBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectDirectoryBtnMouseClicked(evt);
            }
        });
        selectDirectoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDirectoryBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diaLogDirectoryLayout = new javax.swing.GroupLayout(diaLogDirectory.getContentPane());
        diaLogDirectory.getContentPane().setLayout(diaLogDirectoryLayout);
        diaLogDirectoryLayout.setHorizontalGroup(
            diaLogDirectoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DirectoryTree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(diaLogDirectoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathChooseDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                    .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                        .addComponent(selectDirectoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        diaLogDirectoryLayout.setVerticalGroup(
            diaLogDirectoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                .addGroup(diaLogDirectoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DirectoryTree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(diaLogDirectoryLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(diaLogDirectoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(pathChooseDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(selectDirectoryBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Monitoring System");

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("IP:");

        jLabel3.setText("Port: 8080");

        jButton1.setText("Start Server");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        BtnDirectory.setText("Choose Directory");
        BtnDirectory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDirectoryMouseClicked(evt);
            }
        });
        BtnDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDirectoryActionPerformed(evt);
            }
        });

        pathText.setEditable(false);
        pathText.setText("path");
        pathText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(26, 26, 26)
                        .addComponent(BtnDirectory)
                        .addGap(18, 18, 18)
                        .addComponent(pathText, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textIP, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textIP, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnDirectory)
                        .addComponent(pathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addGap(11, 11, 11))
        );

        jList1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("List Client");

        tableLog.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Directory", "Time", "Action", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

        connectSocket = new ConnectSocket();

        ServerThread clientHandler = new ServerThread(connectSocket);
        clientHandler.start();
        JOptionPane.showMessageDialog(this, "Bật server thành công !");

        try {
            textIP.setText(ConnectSocket.socket.getInetAddress().getLocalHost().toString());
        } catch (UnknownHostException ex) {
            Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Bật server không thành công !!",
                    "ERROR", JOptionPane.ERROR_MESSAGE);

        }
        jButton1.setText("Running . . .");
        jButton1.setEnabled(false);

        //connectSocket.receiveData();

    }//GEN-LAST:event_jButton1MouseClicked

    public static void updateListClients() {

        DefaultListModel<String> model = new DefaultListModel<>();
        for (String client : listClient) {
            model.addElement(client);
        }
        jList1.setModel(model);
    }

    public static void updateTableLog(List<FolderInfo> list) {

        if (list != null) {
            DefaultTableModel dtm = (DefaultTableModel) tableLog.getModel();
            dtm.setRowCount(0);
            // duyet danh sach
            for (int i = 0; i < list.size(); i++) {
                dtm.addRow(new Object[]{i, list.get(i).getPath(), 
                    list.get(i).getTime(), 
                    list.get(i).getAction(), 
                    list.get(i).getDescription()});
            }

        }
    }
    private void BtnDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDirectoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnDirectoryActionPerformed

    private void pathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathTextActionPerformed


    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

        String selected = jList1.getSelectedValue();
        String portString = selected.substring(7);
        System.out.println(portString);

        for (ClientHandler lh : ConnectSocket.listClient) {
            if (lh.getClient().getPort() == Integer.parseInt(portString)) {
                if (lh.getDataSend() != null && lh.getDataSend().getPath() != null) {
                    BtnDirectory.setText("Change Directory");
                    pathText.setText(lh.getDataSend().getPath());

                    updateTableLog(lh.getDataSend().getFolderInfo());

                } else {
                    BtnDirectory.setText("Choose Directory");
                    pathText.setText("path");
                }

            }
        }

    }//GEN-LAST:event_jList1ValueChanged

    public void updateTreeDirectory(File[] lstRoot) {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Client Computer");

        for (int i = 0; i < lstRoot.length; i++) {
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(lstRoot[i]);
            root.add(node);
            addChildren(node, lstRoot[i]);
            //roots = lstRoot[i];
        }

        DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();
        model.setRoot(root);
        jTree1.setModel(model);
        pathChooseDirectory.setText("path");
        diaLogDirectory.setVisible(true);
    }

    private void addChildren(DefaultMutableTreeNode node, File file) {
        File[] files = file.listFiles();
        if (files == null) {
            return;
        }
        for (File child : files) {
            if (child.isDirectory()) {
                DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);

                int index = node.getChildCount();

                childNode.insert(new DefaultMutableTreeNode(), 0);// add a dummy node to allow expanding
                node.insert(childNode, index);

                ((DefaultTreeModel) jTree1.getModel()).nodesWereInserted(node, new int[]{index});
            }
        }

    }

    private void BtnDirectoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDirectoryMouseClicked
        // TODO add your handling code here:

        String selected = jList1.getSelectedValue();

        if (selected == null) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Client !");
        } else {
            String portString = selected.substring(7);
            System.out.println(portString);

            for (ClientHandler lh : ConnectSocket.listClient) {
                if (lh.getClient().getPort() == Integer.parseInt(portString)) {
                    currentClientHandler = lh;
                    roots = lh.getDataSend().getRoots();
                    updateTreeDirectory(lh.getDataSend().getRoots());
                }
            }

        }

    }//GEN-LAST:event_BtnDirectoryMouseClicked

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode selectTreeNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectTreeNode != null) {
            pathChooseDirectory.setText(selectTreeNode.getUserObject().toString());
        }

    }//GEN-LAST:event_jTree1ValueChanged

    private File SearchFile(File file, String search) {

        File[] files = file.listFiles();

        if (files != null) {
            for (File f : files) {
                if (f.isDirectory() && f.getAbsolutePath().equals(search)) {
                    return f;
                }
                if (f.isDirectory() && search.contains(f.getAbsolutePath())) {
                    //System.out.println(f.getAbsoluteFile());
                    return SearchFile(f, search);
                }
            }
        }

        return null;
    }

    private void jTree1TreeExpanded(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_jTree1TreeExpanded

        //Lấy nút đang được xổ mở
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) evt.getPath().getLastPathComponent();
        // Nếu nút chưa được tạo cây con, tạo cây con cho nó
        if (node.getChildCount() == 1 && node.getChildAt(0) instanceof DefaultMutableTreeNode
                && ((DefaultMutableTreeNode) node.getChildAt(0)).getUserObject() == null) {

            String nodePathString = node.getUserObject().toString();
            File file = null;
            for (File root : roots) {
                if (nodePathString.contains(root.getAbsolutePath())) {
                    file = SearchFile(root, nodePathString);
                }
            }
            addChildren(node, file);

        }

    }//GEN-LAST:event_jTree1TreeExpanded

    private void updateClientHandler(ClientHandler clientHandler) throws IOException {
        for (int i = 0; i < ConnectSocket.listClient.size(); i++) {
            if (ConnectSocket.listClient.get(i).getClient().getPort() == clientHandler.getClient().getPort()) {
                ConnectSocket.listClient.set(i, clientHandler);
                System.out.println(clientHandler.getDataSend().getPath());
                
                // send to client
                ConnectSocket.listClient.get(i).sendDataToClient();
                break;
            }
        }
    }

    private void selectDirectoryBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectDirectoryBtnMouseClicked

        if (pathChooseDirectory.getText().equals("path")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn thư mục !");
        } else {
            pathText.setText(pathChooseDirectory.getText());
            currentClientHandler.getDataSend().setPath(pathChooseDirectory.getText());
            diaLogDirectory.setVisible(false);
            try {
                updateClientHandler(currentClientHandler);
            } catch (IOException ex) {
                Logger.getLogger(DashboardForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_selectDirectoryBtnMouseClicked

    private void selectDirectoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDirectoryBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectDirectoryBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDirectory;
    private javax.swing.JPanel DirectoryTree;
    private javax.swing.JDialog diaLogDirectory;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private static javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField pathChooseDirectory;
    private javax.swing.JTextField pathText;
    private javax.swing.JButton selectDirectoryBtn;
    private static javax.swing.JTable tableLog;
    private javax.swing.JLabel textIP;
    // End of variables declaration//GEN-END:variables
}
